// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartHub.Api.Data.Mappings;

#nullable disable

namespace SmartHub.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241204000743_Associations")]
    partial class Associations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("SmartHub.Core.Models.Association", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId", "Type")
                        .IsUnique()
                        .HasDatabaseName("IX_DeclarationTemplate_Client_Type");

                    b.ToTable("Association", (string)null);
                });

            modelBuilder.Entity("SmartHub.Core.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cod")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("DecPassword")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("IE")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("IM")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<string>("Observations")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("SefazAccess")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("Taxation")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Client", (string)null);
                });

            modelBuilder.Entity("SmartHub.Core.Models.Declaration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Competence")
                        .HasColumnType("DATE");

                    b.Property<bool>("IsActive")
                        .HasColumnType("BOOLEAN");

                    b.Property<int>("Situation")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId", "Competence")
                        .IsUnique()
                        .HasDatabaseName("IX_Declaration_Client_Competence");

                    b.ToTable("Declaration", (string)null);
                });

            modelBuilder.Entity("SmartHub.Core.Models.Slip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Competence")
                        .HasColumnType("DATE");

                    b.Property<bool>("IsActive")
                        .HasColumnType("BOOLEAN");

                    b.Property<int>("Situation")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<double>("Value")
                        .HasColumnType("DECIMAL(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId", "Competence")
                        .IsUnique()
                        .HasDatabaseName("IX_Slip_Client_Competence");

                    b.ToTable("Slip", (string)null);
                });

            modelBuilder.Entity("SmartHub.Core.Models.Association", b =>
                {
                    b.HasOne("SmartHub.Core.Models.Client", "Client")
                        .WithMany("Associations")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("SmartHub.Core.Models.Declaration", b =>
                {
                    b.HasOne("SmartHub.Core.Models.Client", "Client")
                        .WithMany("Declarations")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("SmartHub.Core.Models.Slip", b =>
                {
                    b.HasOne("SmartHub.Core.Models.Client", "Client")
                        .WithMany("Slips")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("SmartHub.Core.Models.Client", b =>
                {
                    b.Navigation("Associations");

                    b.Navigation("Declarations");

                    b.Navigation("Slips");
                });
#pragma warning restore 612, 618
        }
    }
}
